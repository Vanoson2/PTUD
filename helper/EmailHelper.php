<?php
/**
 * Email Helper Class
 * 
 * Qu·∫£n l√Ω vi·ªác g·ª≠i email x√°c th·ª±c v√† c√°c lo·∫°i email kh√°c
 * 
 * Requirements: PHPMailer (install via Composer)
 * Run: composer require phpmailer/phpmailer
 */

// Load Composer autoload (PHPMailer will be autoloaded)
require_once __DIR__ . '/../vendor/autoload.php';  // Composer autoload

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

class EmailHelper {
    private $config;
    private $mail;
    
    public function __construct() {
        // Load email configuration
        $this->config = require __DIR__ . '/../config/email.php';
        
        // Initialize PHPMailer
        $this->mail = new PHPMailer(true);
        $this->setupSMTP();
    }
    
    /**
     * C·∫•u h√¨nh SMTP
     */
    private function setupSMTP() {
        try {
            // Server settings
            $this->mail->isSMTP();
            $this->mail->Host       = $this->config['smtp_host'];
            $this->mail->SMTPAuth   = true;
            $this->mail->Username   = $this->config['smtp_username'];
            $this->mail->Password   = $this->config['smtp_password'];
            $this->mail->SMTPSecure = $this->config['smtp_secure'];
            $this->mail->Port       = $this->config['smtp_port'];
            $this->mail->CharSet    = $this->config['charset'];
            $this->mail->SMTPDebug  = $this->config['debug'];
            
            // From address
            $this->mail->setFrom($this->config['from_email'], $this->config['from_name']);
        } catch (Exception $e) {
            error_log("Email Setup Error: " . $e->getMessage());
        }
    }
    
    /**
     * G·ª≠i email x√°c th·ª±c v·ªõi m√£ 6 s·ªë
     * 
     * @param string $toEmail Email ng∆∞·ªùi nh·∫≠n
     * @param string $toName T√™n ng∆∞·ªùi nh·∫≠n
     * @param string $verifyCode M√£ x√°c th·ª±c 6 s·ªë
     * @return bool True n·∫øu g·ª≠i th√†nh c√¥ng
     */
    public function sendVerificationCode($toEmail, $toName, $verifyCode) {
        try {
            // Clear any previous recipients
            $this->mail->clearAddresses();
            
            // Recipient
            $this->mail->addAddress($toEmail, $toName);
            
            // Content
            $this->mail->isHTML(true);
            $this->mail->Subject = 'M√£ x√°c th·ª±c t√†i kho·∫£n WeGo';
            $this->mail->Body    = $this->getVerificationCodeEmailTemplate($toName, $verifyCode);
            $this->mail->AltBody = "Xin ch√†o $toName,\n\nM√£ x√°c th·ª±c c·ªßa b·∫°n l√†: $verifyCode\n\nM√£ n√†y s·∫Ω h·∫øt h·∫°n sau 15 ph√∫t.\n\nN·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.\n\nTr√¢n tr·ªçng,\nƒê·ªôi ng≈© WeGo";
            
            // Send email
            $result = $this->mail->send();
            
            if ($result) {
                error_log("Verification email sent successfully to: " . $toEmail);
                return true;
            }
            
            return false;
            
        } catch (Exception $e) {
            error_log("Email Send Error: " . $this->mail->ErrorInfo);
            return false;
        }
    }
    
    /**
     * Template HTML cho email x√°c th·ª±c v·ªõi m√£ 6 s·ªë
     */
    private function getVerificationCodeEmailTemplate($name, $code) {
        return '
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
        .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
        .code-box { 
            background: #fff; 
            border: 2px dashed #667eea; 
            padding: 20px; 
            text-align: center; 
            margin: 30px 0; 
            border-radius: 10px; 
        }
        .code { 
            font-size: 36px; 
            font-weight: bold; 
            color: #667eea; 
            letter-spacing: 10px; 
            font-family: "Courier New", monospace; 
        }
        .footer { text-align: center; margin-top: 20px; color: #666; font-size: 12px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üè° WeGo</h1>
            <p>ƒê·∫∑t ph√≤ng du l·ªãch d·ªÖ d√†ng</p>
        </div>
        <div class="content">
            <h2>Xin ch√†o ' . htmlspecialchars($name) . '!</h2>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i WeGo.</p>
            <p>ƒê·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω, vui l√≤ng nh·∫≠p m√£ x√°c th·ª±c b√™n d∆∞·ªõi:</p>
            <div class="code-box">
                <p style="margin: 0; color: #666; font-size: 14px;">M√É X√ÅC TH·ª∞C C·ª¶A B·∫†N</p>
                <div class="code">' . htmlspecialchars($code) . '</div>
                <p style="margin: 10px 0 0 0; color: #999; font-size: 12px;">M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 15 ph√∫t</p>
            </div>
            <p><strong>L∆∞u √Ω:</strong></p>
            <ul>
                <li>M√£ x√°c th·ª±c ch·ªâ c√≥ hi·ªáu l·ª±c trong 15 ph√∫t</li>
                <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                <li>N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email</li>
            </ul>
        </div>
        <div class="footer">
            <p>¬© 2025 WeGo. All rights reserved.</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
    </div>
</body>
</html>';
    }
    
    /**
     * G·ª≠i email reset password (d·ª± ph√≤ng cho t∆∞∆°ng lai)
     */
    public function sendPasswordResetEmail($toEmail, $toName, $resetToken) {
        try {
            $this->mail->clearAddresses();
            $this->mail->addAddress($toEmail, $toName);
            
            $resetLink = 'http://localhost/PTUD/index.php?action=reset-password&token=' . $resetToken;
            
            $this->mail->isHTML(true);
            $this->mail->Subject = 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u WeGo';
            $this->mail->Body    = "
                <h2>Xin ch√†o $toName!</h2>
                <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Nh·∫•n v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c:</p>
                <a href='$resetLink'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                <p>Link n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.</p>
            ";
            
            return $this->mail->send();
            
        } catch (Exception $e) {
            error_log("Password reset email error: " . $this->mail->ErrorInfo);
            return false;
        }
    }
}
